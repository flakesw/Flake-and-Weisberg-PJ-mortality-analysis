{
    "collab_server" : "",
    "contents" : "#### Analysis of field data\nlibrary(plyr)\nlibrary(lme4)\nlibrary(MuMIn)\nlibrary(boot)\nlibrary(car)\nsource(\"pj_mortality_functions_090617.R\")\noptions(na.action = na.fail)\n\n\nplot_data <- read.csv(\"./Clean data/plot_level_vars.csv\")\nplot_data_scaled <- read.csv(\"./Clean data/plot_level_vars_scaled.csv\")\n\n#---------------------------------------------------------------------------------\n####################### Plot analysis\n###### Select climate variables\n######################################\n\n#global model with all abiotic variables\nplot_climate_global <- lmer(Avg_delta_pdc ~ avg_height + \n                              avg_Diam + avg_ENN + BA.Plot + Pct_pimo + \n                              cwd_normal_cum + fdsi_anom + \n                              cwd_peak_anom + tmean + ppt + \n                              vpd_normal_annual_max + vpd_peak_anom + avg_summer_tmax + \n                              peak_tmax + min_ann_ppt +  \n                              Pndjfm + Avg_depth + AWC + (1|Cluster), data = plot_data_scaled, na.action = na.fail)\n\n\n#correlation matrix to select only variables pairwise correlated with r <=0.5\ncormat <- abs(cor(plot_data_scaled[, c('avg_height', \n                                       'avg_Diam', 'avg_ENN', 'BA.Plot', 'Pct_pimo',\n                                       'cwd_normal_cum', 'fdsi_anom',\n                                       'cwd_peak_anom' , 'tmean', 'ppt',\n                                       'vpd_normal_annual_max' , 'vpd_peak_anom' , 'avg_summer_tmax', 'peak_tmax', \n                                       'min_ann_ppt',  'Pndjfm' , 'Avg_depth' , 'AWC')])) <=.5\n\n#use all stand structure vars\ncormat[1:5,1:5] <- TRUE\n\n#use only one side of matrix (avoid duplicated models)\ncormat[!lower.tri(cormat)] <- NA\n\n# build models with all combinations of abiotic variables, with a maximum of 4 variables per model\n# this is very quick (a few seconds)\n\nplot_dredge <- dredge(plot_climate_global, \n                      fixed = c('avg_height','avg_Diam', 'avg_ENN',\n                                'BA.Plot', 'Pct_pimo'),\n                      subset = cormat, \n                      m.lim = c(5, 8), \n                      trace = 2)\n\n\nsaveRDS(plot_dredge, \"./model output/plot_dredge_outputs.rds\")\n\nbest_plot_call <- as.character(unlist(attr((plot_dredge)[1], \"model.calls\")))\nplot_model_dredge <- eval(parse(text = best_plot_call))\nsummary(plot_model_dredge)\nr.squaredGLMM(plot_model_dredge)\nsummary(plot_model_dredge)\nAICc(plot_model_dredge)\n\nplot_dredge[1:10] #top 10 models\nwrite.csv(plot_dredge[1:10], \"./model output/plot_level_mod_selection_table.csv\")\n\n\n#validation and fitting interaction terms\n\nplot(resid(plot_model_dredge)~predict(plot_model_dredge)) #looks good!\nabline(h=0)\n\nsummary(plot_model_dredge)\nvif.mer(plot_model_dredge)\nr.squaredGLMM(plot_model_dredge)\n\nplot_model_int_depth <- update(plot_model_dredge, . ~ . + BA.Plot:Avg_depth)\n\nsaveRDS(plot_model_dredge, \"./model output/plot_model.rds\")\n\nplot_model_int_cwd <- update(plot_model_dredge, . ~ . + BA.Plot:cwd_normal_cum)\nplot_model_int_tmax <- update(plot_model_dredge, . ~ . + BA.Plot:avg_summer_tmax)\n\nAICc(plot_model_dredge)\nAICc(plot_model_int_depth)\nAICc(plot_model_int_cwd)\nAICc(plot_model_int_tmax)\n\nplot(allEffects(plot_model_int_depth))\nplot(allEffects(plot_model_int_cwd))\nplot(allEffects(plot_model_int_tmax))\n\nsummary(plot_model_int_depth)\nsummary(plot_model_int_cwd)\nsummary(plot_model_int_tmax)\n\n#------------------------------------------------------------------\n########## Bootstrapping\nlibrary(\"boot\")\n\n#function to use for bootstrapping, returns the fixed effects from each model run\nbs <- function(formula, data, indices) {\n  d <- data[indices,] # allows boot to select sample \n  fit <- lmer(formula, data=d)\n  return(fixef(fit)) \n} \n\n\n# bootstrapping with 5000 replications\n#this only takes a minute or so\n\n#calls bs function with the given formula, returns all the fixed effects\nbootstrap_plot_level <- boot(data= plot_data_scaled, \n                             statistic=bs, \n                             R=5000, \n                             formula=plot_model_dredge@call,\n                             parallel = \"no\")\n\n\nsaveRDS(bootstrap_plot_level, \"./model output/bootstrap_plot.rds\")\n\nbootstrap_plot_level\n# summary(bootstrap_plot_level)\n# plot(bootstrap_plot_level, index=1) # intercept\n# plot(bootstrap_plot_level, index=2) #\n# plot(bootstrap_plot_level, index=3) #\n\n# get 95% confidence intervals \n\n#initialize the data frame to receive the CI inforation\nci_plot <- cbind(attr(bootstrap_plot_level$t0, \"names\"), summary(bootstrap_plot_level))\nci_plot$lo <- NA\nci_plot$hi <- NA\n\n#calculate CI for each parameter\nfor( i in 1:nrow(ci_plot)){\n  ci_boot <- boot.ci(bootstrap_plot_level, type = \"bca\", index = i)\n  #extract low and hi, add to ci_plot df\n  ci_plot$lo[i] <- ci_boot$bca[1,4]\n  ci_plot$hi[i] <- ci_boot$bca[1,5]\n  ci_plot$mean[i] <- mean(bootstrap_plot_level$t[, i])\n}\n\nsaveRDS(ci_plot, \"./model output/ci_plot.rds\")\nwrite.csv(ci_plot, \"./model output/ci_plot.csv\")\n\n",
    "created" : 1508964570081.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2739677685",
    "id" : "D1727B3C",
    "lastKnownWriteTime" : 1509035705,
    "last_content_update" : 1509035705864,
    "path" : "C:/Users/Sam/Google Drive/Projects/MS Thesis/Flake and Weisberg PJ mortality analysis/plot_level_analysis_for_paper_10177.R",
    "project_path" : "plot_level_analysis_for_paper_10177.R",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}